# vim: set syntax=zsh

zmodload zsh/zutil
autoload -Uz add-zsh-hook

function load-nix() {
    setopt local_options err_return

    if [[ -n "$NIX_SERVER_SOCKET" ]]; then
        printf 'A server is already running at %s\n' "$NIX_SERVER_SOCKET" >&2
        return 1
    fi

    local -a arg_forwarder arg_socket
    zparseopts -D -E -K \
        -forward:=arg_forwarder \
        -socket:=arg_socket

    local forwarder
    if [[ -n $arg_forwarder ]]; then
        forwarder="$arg_forwarder[-1]"
        typeset -g NIX_SERVER_FORWARDING_PATH="${XDG_CONFIG_HOME-${HOME}/.config}/$arg_forwarder"
        path=("$forwarder" "$path[@]")
    fi

    local state_dir="${XDG_STATE_HOME-${HOME}/.local/state}/nix-server"
    local run_dir="${XDG_RUNTIME_DIR-${HOME}/.cache}/nix-server"
    mkdir -p "$state_dir"
    mkdir -p "$run_dir"
    chmod 0700 "$run_dir"

    typeset -gx NIX_SERVER_SOCKET
    if [[ -z $arg_socket ]]; then
        NIX_SERVER_SOCKET="$run_dir/$$.sock"
    else
        NIX_SERVER_SOCKET="$arg_socket[-1]"
    fi

    local log_file="$state_dir/$$.server.log"
    local server_pid_file="$state_dir/$$.server.pid"

    local plugin_dir="$(whence -p make-nix-forwarder)"
    plugin_dir="${plugin_dir:a:h}/.."
    command-server-start \
        "$plugin_dir/server.conf" \
        --socket "$NIX_SERVER_SOCKET" \
        --log-file "$log_file" \
        -- "$@" 3> "$server_pid_file"

    typeset -g NIX_SERVER_PID="$(cat "$server_pid_file")"
    printf 'Server running on pid %s\n' "$NIX_SERVER_PID"

    add-zsh-hook zshexit unload-nix
}

load-nix "$@"
